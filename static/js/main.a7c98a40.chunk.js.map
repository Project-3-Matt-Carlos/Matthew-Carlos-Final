{"version":3,"sources":["GameResults.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["GameResults","props","className","logo","src","alt","company","href","url","target","occupation","location","type","apply","key","Footer","icon","faLinkedin","faGithub","rel","App","useState","jobsData","setJobsData","fetchStatus","setFetchStatus","search","fullTime","remote","formData","setFormData","handleInputChange","name","value","checked","prev","onSubmit","e","preventDefault","searchQuery","encodeURI","encodeURIComponent","fetch","then","response","json","fetchedData","JSON","parse","contents","length","catch","fetchJobsByQueries","htmlFor","onChange","id","placeholder","map","job","company_logo","company_url","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c98a40.chunk.js","sourcesContent":["function GameResults(props) {\r\n  return (\r\n    <article key={props.key} className=\"job-card\">\r\n      <div className=\"company-logo\">\r\n        {props.logo ? (\r\n          <img src={props.logo} alt={props.company} />\r\n        ) : (\r\n          props.company[0]\r\n        )}\r\n      </div>\r\n      <ul className=\"info\">\r\n        <li className=\"company-name\">\r\n          <a href={props.url} target=\"_blank\">\r\n            {props.company}\r\n          </a>\r\n        </li>\r\n        <li className=\"ocupation\">{props.occupation}</li>\r\n        <li className=\"info-item info-dot \">{props.location}</li>\r\n        <li className=\"info-item job-type\">{props.type}</li>\r\n        <li className=\"apply-info\">\r\n          <a href={props.apply} target=\"_blank\">\r\n            Learn More\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default GameResults;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"app-footer\">\r\n      <h3>Created By</h3>\r\n      <div className=\"footer-flex\">\r\n        <ul>\r\n          <li>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/matthew-whitely/\"\r\n              target=\"_blank\"\r\n            >\r\n              <FontAwesomeIcon icon={faLinkedin} />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/Matthew-Whitely\" target=\"_blank\">\r\n              <FontAwesomeIcon icon={faGithub} />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <p>Matthew Whitely</p>\r\n          </li>\r\n        </ul>\r\n        <ul>\r\n          <li>|</li>\r\n        </ul>\r\n        <ul>\r\n          <li>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/luis-carlos-barrero/\"\r\n              target=\"_blank\"\r\n            >\r\n              <FontAwesomeIcon icon={faLinkedin} />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/carlosbarrero\" target=\"_blank\">\r\n              <FontAwesomeIcon icon={faGithub} />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <p>Luis Carlos Barrero</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"footer-flex\">\r\n        <ul>\r\n          <li>\r\n            <a\r\n              href=\"https://junocollege.com/\"\r\n              rel=\"nooppener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              Copyright Â© Juno College\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport GameResults from \"./GameResults\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst fetchJobsByQueries = (\r\n  { search, location, remote, fullTime },\r\n  setJobsData,\r\n  setFetchStatus\r\n) => {\r\n  let searchQuery = search;\r\n\r\n  if (remote) {\r\n    search = `${searchQuery}+remote`;\r\n  }\r\n\r\n  let url = `https://jobs.github.com/positions.json?search=${encodeURI(\r\n    searchQuery\r\n  )}&location=${encodeURI(location)}`;\r\n\r\n  if (fullTime) {\r\n    url = `${url}&full_time=on`;\r\n  }\r\n\r\n  // GitHub jobs API does not allow the requests from the client, so must use this\r\n  url = `https://api.allorigins.win/get?url=${encodeURIComponent(url)}`;\r\n\r\n  // Clean the current jobs data\r\n  setJobsData([]);\r\n\r\n  setFetchStatus(\"Browsing jobs...\");\r\n\r\n  // Fetch to the api...\r\n  fetch(url)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((jobsData) => {\r\n      const fetchedData = JSON.parse(jobsData.contents);\r\n\r\n      if (fetchedData.length === 0) {\r\n        return setFetchStatus(\"No jobs found\");\r\n      }\r\n\r\n      setJobsData(fetchedData);\r\n\r\n      setFetchStatus(\r\n        \"Browse your favourite jobs by type a description, location, full time or remote\"\r\n      );\r\n    })\r\n    .catch(() =>\r\n      setFetchStatus(\"Oops, an error has ocurred, please try to search again.\")\r\n    );\r\n};\r\n\r\nfunction App() {\r\n  const [jobsData, setJobsData] = useState([]);\r\n\r\n  const [fetchStatus, setFetchStatus] = useState(\r\n    \"Browse your favourite jobs by type a description, location, full time or remote\"\r\n  );\r\n\r\n  const [formData, setFormData] = useState({\r\n    search: \"\",\r\n    location: \"\",\r\n    fullTime: false,\r\n    remote: false,\r\n  });\r\n\r\n  const handleSearchJobs = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetchJobsByQueries(formData, setJobsData, setFetchStatus);\r\n\r\n    // Reset the form data\r\n    setFormData({\r\n      search: \"\",\r\n      location: \"\",\r\n      fullTime: false,\r\n      remote: false,\r\n    });\r\n  };\r\n\r\n  const handleInputChange = ({ target: { name, value, type, checked } }) => {\r\n    if (type === \"checkbox\") {\r\n      return setFormData((prev) => ({ ...prev, [`${name}`]: checked }));\r\n    }\r\n\r\n    setFormData((prev) => ({ ...prev, [`${name}`]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app wrapper\">\r\n      {/* App Header */}\r\n      <header className=\"app-header\">\r\n        {/* Github logo & app name*/}\r\n        <div className=\"name-logo\">\r\n          <h1>Github Jobs</h1>\r\n        </div>\r\n        <p>\r\n          Search for jobs by term, location full time vs part time, or any\r\n          combination of the three. <br /> All parameters are optional.\r\n        </p>\r\n      </header>\r\n\r\n      {/* App Main */}\r\n      <main className=\"app-main\">\r\n        {/* Filter section */}\r\n        <section className=\"filters-section\">\r\n          <h2 className=\"section-heading\">Filters</h2>\r\n\r\n          <form onSubmit={handleSearchJobs} className=\"search-form\">\r\n            <label htmlFor=\"search\">\r\n              <h3>By description:</h3>\r\n\r\n              <input\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                name=\"search\"\r\n                id=\"search\"\r\n                value={formData.search}\r\n                placeholder=\"Title, companies, technology\"\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"location\">\r\n              <h3>By location:</h3>\r\n\r\n              <input\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                value={formData.location}\r\n                name=\"location\"\r\n                id=\"location\"\r\n                placeholder=\"Location, country, state, city\"\r\n              />\r\n            </label>\r\n\r\n            {/* <label className=\"checkbox-label\" htmlFor=\"full-time\">\r\n              <input\r\n                onChange={handleInputChange}\r\n                value=\"on\"\r\n                checked={formData.fullTime}\r\n                type=\"checkbox\"\r\n                name=\"fullTime\"\r\n                id=\"full-time\"\r\n              />\r\n              <span>Full time</span>\r\n            </label>\r\n\r\n            <label className=\"checkbox-label\" htmlFor=\"remote\">\r\n              <input\r\n                onChange={handleInputChange}\r\n                value=\"on\"\r\n                checked={formData.remote}\r\n                type=\"checkbox\"\r\n                name=\"remote\"\r\n                id=\"remote\"\r\n              />\r\n              <span>Remote</span>\r\n            </label> */}\r\n\r\n            <button className=\"submit-button\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </section>\r\n\r\n        {/* Results section */}\r\n        <section className=\"results-section\">\r\n          <h2 className=\"section-heading\">Results</h2>\r\n          <div className=\"cards-container\">\r\n            {jobsData.length === 0 && (\r\n              <div className=\"status-message\">{fetchStatus}</div>\r\n            )}\r\n            {jobsData.map((job) => (\r\n              <GameResults\r\n                key={job.id}\r\n                logo={job.company_logo}\r\n                company={job.company}\r\n                url={job.company_url}\r\n                occupation={job.title}\r\n                location={job.location}\r\n                type={job.type}\r\n                apply={job.url}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n      {/* App Footer */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}